<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Typora + PicGo + Github 无缝完成写博客操作</title>
    <url>/2020/03/24/Typora%20+%20PicGo%20+%20Github%20%E6%97%A0%E7%BC%9D%E5%AE%8C%E6%88%90%E5%86%99%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="Typora-PicGo-Github-无缝完成写博客操作"><a href="#Typora-PicGo-Github-无缝完成写博客操作" class="headerlink" title="Typora + PicGo + Github 无缝完成写博客操作"></a>Typora + PicGo + Github 无缝完成写博客操作</h1><h2 id="一、什么是无缝操作"><a href="#一、什么是无缝操作" class="headerlink" title="一、什么是无缝操作"></a>一、什么是无缝操作</h2><p>无缝操作就是在 Typora 本地就完成写博客的操作，不需要去其他地方上传图片到图床再复制连接，在 Typora 内就能完成上传图片到图床的操作</p>
<p>相比其他网页编辑博客，Typora的访问速度更快，并且可以随时随地写博客，缺点就是图片只能保存在本地，不过在 Typora 更新之后，就可以使用 PicGo 直接上传图片到图床了</p>
<blockquote>
<p>图床：图片保存在一个网站上，这样就可以在任何地方通过链接获取图片了，与markdown简直是绝配</p>
</blockquote>
<a id="more"></a>

<h2 id="二、实现无缝操作"><a href="#二、实现无缝操作" class="headerlink" title="二、实现无缝操作"></a>二、实现无缝操作</h2><h3 id="PicGo的安装与配置"><a href="#PicGo的安装与配置" class="headerlink" title="PicGo的安装与配置"></a>PicGo的安装与配置</h3><p>下载PicGo：<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></p>
<p>打开之后会出现类似的图片：</p>
<p><img src="https://raw.githubusercontent.com/Pipepw/FigureBed/master/blog_files/img/PicGo-Github-PicBed/20200324173631.png" alt=""></p>
<p>在设置中将端口设置为36677</p>
<p><img src="https://raw.githubusercontent.com/Pipepw/FigureBed/master/blog_files/img/PicGo-Github-PicBed/image-20200324174707247.png" alt="image-20200324174707247"></p>
<p>这样，PicGo的设置就告一段落了</p>
<h3 id="将-Github-作为免费图床"><a href="#将-Github-作为免费图床" class="headerlink" title="将 Github 作为免费图床"></a>将 Github 作为免费图床</h3><p>首先创建一个新的仓库</p>
<p><img src="https://raw.githubusercontent.com/Pipepw/FigureBed/master/blog_files/img/PicGo-Github-PicBed/image-20200324175141172.png" alt="image-20200324175141172"></p>
<p>然后在 Github 的设置中创建一个tocken，这个tocken只出现一次，注意保存</p>
<p><img src="https://raw.githubusercontent.com/Pipepw/FigureBed/master/blog_files/img/PicGo-Github-PicBed/image-20200324175704641.png" alt="image-20200324175704641"></p>
<p>下面就是tocken</p>
<p><img src="https://raw.githubusercontent.com/Pipepw/FigureBed/master/blog_files/img/PicGo-Github-PicBed/image-20200324175845451.png" alt="image-20200324175845451"></p>
<p>然后回到 PicGo中，设置 Github 图床</p>
<p><img src="https://raw.githubusercontent.com/Pipepw/FigureBed/master/blog_files/img/PicGo-Github-PicBed/image-20200324175948813.png" alt="image-20200324175948813"></p>
<blockquote>
<p>仓库名就是刚才创建的那个图床仓库，按照你自己创建的仓库名填</p>
<p>分支名就是master</p>
<p>Tocken：刚才生成的tocken</p>
<p>指定存储路径就是在仓库中图片存放的位置</p>
<p>自定义域名就是<a href="https://raw.githubusercontent.com/Pipepw/FigureBed/master，把中间的Pipepw/FigureBed换成你自己的仓库名就行，后面的master不要少了，这个自定义域名就是后面上传图片之后，对图片进行访问所需要的，上传失败则检查一下" target="_blank" rel="noopener">https://raw.githubusercontent.com/Pipepw/FigureBed/master，把中间的Pipepw/FigureBed换成你自己的仓库名就行，后面的master不要少了，这个自定义域名就是后面上传图片之后，对图片进行访问所需要的，上传失败则检查一下</a></p>
</blockquote>
<h3 id="Typora的安装与配置"><a href="#Typora的安装与配置" class="headerlink" title="Typora的安装与配置"></a>Typora的安装与配置</h3><p>下载安装 Typora：<a href="https://typora.io/" target="_blank" rel="noopener">Typora</a></p>
<p><img src="https://raw.githubusercontent.com/Pipepw/FigureBed/master/blog_files/img/PicGo-Github-PicBed/image-20200324194721349.png" alt="image-20200324194721349"></p>
<p>设置使用PicGo进行上传，最后验证一下是否能够上传</p>
<p>这样，我们就可以在插入图片的时候选择上传到图床了，如果希望直接上传，那么就改变上面插入图片的选项</p>
]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>配置环境</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/23/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
